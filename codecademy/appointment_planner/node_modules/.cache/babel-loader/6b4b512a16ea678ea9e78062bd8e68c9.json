{"ast":null,"code":"var _jsxFileName = \"/Users/pedronunes/Desktop/projects/codecademy/appointment_planner/src/containers/contactsPage/ContactsPage.js\";\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { ContactForm } from '../../components/contactForm/ContactForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsPage = props => {\n  // Define state variables for contact info and duplicate check\n  const contact = props.contact;\n  const addContact = props.addContact;\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Add contact info and clear data if the contact name is not a duplicate\n  };\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = ContactsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"sources":["/Users/pedronunes/Desktop/projects/codecademy/appointment_planner/src/containers/contactsPage/ContactsPage.js"],"names":["React","useState","useEffect","ContactForm","ContactsPage","props","contact","addContact","handleSubmit","e","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,0CAA5B;;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACrC;AAEA,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAMC,UAAU,GAAGF,KAAK,CAACE,UAAzB;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF,GAD0B,CAE1B;AAID,GAND;AASA;AACF;AACA;AACA;;;AAEE,sBACE;AAAA,4BACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA/BM;KAAMN,Y","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from 'react';\r\nimport { ContactForm } from '../../components/contactForm/ContactForm'\r\nexport const ContactsPage = (props) => {\r\n  // Define state variables for contact info and duplicate check\r\n  \r\n  const contact = props.contact;\r\n  const addContact = props.addContact;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Add contact info and clear data if the contact name is not a duplicate\r\n \r\n\r\n\r\n  };\r\n\r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}