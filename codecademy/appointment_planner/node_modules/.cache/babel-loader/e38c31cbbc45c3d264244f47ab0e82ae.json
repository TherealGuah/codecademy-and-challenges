{"ast":null,"code":"var _jsxFileName = \"/Users/pedronunes/Desktop/projects/codecademy/appointment_planner/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\nimport { useState } from 'react';\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // state variables for contacts and appointments \n  const [contact, setContact] = useState([]);\n  const [appointment, setAppointment] = useState([]);\n  const ROUTES = {\n    CONTACTS: \"/contacts\",\n    APPOINTMENTS: \"/appointments\"\n  }; // functions to add data to contacts and appointments\n\n  const addContact = (name, phone, email) => {\n    setContact(prev => [...prev, {\n      name,\n      phone,\n      email\n    }]);\n  };\n\n  const addAppointment = (title, contact, date, time) => {\n    setAppointment(prev => [...prev, {\n      title,\n      contact,\n      date,\n      time\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: ROUTES.CONTACTS,\n        activeClassName: \"active\",\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: ROUTES.APPOINTMENTS,\n        activeClassName: \"active\",\n        children: \"Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: ROUTES.CONTACTS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: ROUTES.CONTACTS,\n          children: /*#__PURE__*/_jsxDEV(ContactsPage, {\n            addContact: addContact,\n            contact: this.state.contact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: ROUTES.APPOINTMENTS,\n          children: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n            addAppointment: addAppointment,\n            appointment: appointment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"et2POrSSXedaVeEtSV1Xy1JtHkE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pedronunes/Desktop/projects/codecademy/appointment_planner/src/App.js"],"names":["React","Switch","Route","Redirect","NavLink","useState","AppointmentsPage","ContactsPage","App","contact","setContact","appointment","setAppointment","ROUTES","CONTACTS","APPOINTMENTS","addContact","name","phone","email","prev","addAppointment","title","date","time","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,OAAlC,QAAiD,kBAAjD;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,gBAAT,QAAiC,gDAAjC;AACA,SAASC,YAAT,QAA6B,wCAA7B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAyBL,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMQ,MAAM,GAAG;AACbC,IAAAA,QAAQ,EAAE,WADG;AAEbC,IAAAA,YAAY,EAAE;AAFD,GAAf,CALa,CAUb;;AACA,QAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,KAAd,KAAyB;AAC1CT,IAAAA,UAAU,CAAEU,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU;AAACH,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA;AAAd,KAAV,CAAV,CAAV;AACD,GAFD;;AAGA,QAAME,cAAc,GAAG,CAACC,KAAD,EAAQb,OAAR,EAAiBc,IAAjB,EAAuBC,IAAvB,KAAgC;AACrDZ,IAAAA,cAAc,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAJ,EAAU;AAACE,MAAAA,KAAD;AAAQb,MAAAA,OAAR;AAAiBc,MAAAA,IAAjB;AAAuBC,MAAAA;AAAvB,KAAV,CAAX,CAAd;AACD,GAFD;;AAKA,sBACE;AAAA,4BACE;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAEX,MAAM,CAACC,QAApB;AAA8B,QAAA,eAAe,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAED,MAAM,CAACE,YAApB;AAAkC,QAAA,eAAe,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAEF,MAAM,CAACC;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAED,MAAM,CAACC,QAApB;AAAA,iCAEE,QAAC,YAAD;AACE,YAAA,UAAU,EAAEE,UADd;AAEE,YAAA,OAAO,EAAE,KAAKS,KAAL,CAAWhB;AAFtB;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAWE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEI,MAAM,CAACE,YAApB;AAAA,iCAEE,QAAC,gBAAD;AACE,YAAA,cAAc,EAAEM,cADlB;AAEE,YAAA,WAAW,EAAEV;AAFf;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAiCD;;GApDQH,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\nimport { useState } from 'react';\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  // state variables for contacts and appointments \r\n  const [contact, setContact] =  useState([]);\r\n  const [appointment, setAppointment] = useState([]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  // functions to add data to contacts and appointments\r\n  const addContact = (name, phone, email ) => {\r\n    setContact( prev => [...prev, {name, phone, email}]);\r\n  };\r\n  const addAppointment = (title, contact, date, time) => {\r\n    setAppointment( prev =>  [...prev, {title, contact, date, time}]);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n             {/* Add props to ContactsPage */}\r\n            <ContactsPage \r\n              addContact={addContact}\r\n              contact={this.state.contact}\r\n              />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            {/* Add props to AppointmentsPage */}\r\n            <AppointmentsPage \r\n              addAppointment={addAppointment}\r\n              appointment={appointment}\r\n              />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}