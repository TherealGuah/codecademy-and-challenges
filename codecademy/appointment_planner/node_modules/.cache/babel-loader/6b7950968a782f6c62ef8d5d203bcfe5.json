{"ast":null,"code":"var _jsxFileName = \"/Users/pedronunes/Desktop/projects/codecademy/appointment_planner/src/containers/contactsPage/ContactsPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { ContactForm } from '../../components/contactForm/ContactForm';\nimport { TileList } from '../../components/tileList/TileList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsPage = props => {\n  _s();\n\n  // Define state variables for contact info and duplicate check\n  const contact = props.contact;\n  const addContact = props.addContact;\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [duplicate, setDuplicate] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Add contact info and clear data if the contact name is not a duplicate\n\n    if (!duplicate) {\n      addContact(name, phone, email); // reseting values\n\n      setName('');\n      setPhone('');\n      setEmail('');\n    }\n  }; // check for contact name in the contacts array variable in props\n\n\n  useEffect(() => {\n    for (const person of contact) {\n      if (name === person.name) {\n        setDuplicate(true);\n      }\n\n      return;\n    }\n  }, [name]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        name: name,\n        phone: phone,\n        email: email,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactsPage, \"BYxyrn6t6cgckC7hvAUC646tH1A=\");\n\n_c = ContactsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"sources":["/Users/pedronunes/Desktop/projects/codecademy/appointment_planner/src/containers/contactsPage/ContactsPage.js"],"names":["React","useState","useEffect","ContactForm","TileList","ContactsPage","props","contact","addContact","name","setName","phone","setPhone","email","setEmail","duplicate","setDuplicate","handleSubmit","e","preventDefault","person"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,0CAA5B;AACA,SAASC,QAAT,QAAyB,oCAAzB;;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACrC;AACA,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAMC,UAAU,GAAGF,KAAK,CAACE,UAAzB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMgB,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF,GAD0B,CAE1B;;AACA,QAAI,CAACJ,SAAL,EAAgB;AAEdP,MAAAA,UAAU,CAACC,IAAD,EAAME,KAAN,EAAaE,KAAb,CAAV,CAFc,CAGd;;AACAH,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GAXD,CAVqC,CAwBrC;;;AACAZ,EAAAA,SAAS,CAAE,MAAM;AACf,SAAK,MAAMkB,MAAX,IAAqBb,OAArB,EAA8B;AAC5B,UAAIE,IAAI,KAAKW,MAAM,CAACX,IAApB,EAA0B;AACxBO,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED;AACD;AACF,GARQ,EAQP,CAACP,IAAD,CARO,CAAT;AAUA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,KAAK,EAAEE,KAFT;AAGE,QAAA,KAAK,EAAEE,KAHT;AAIE,QAAA,YAAY,EAAEI;AAJhB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CArDM;;GAAMZ,Y;;KAAAA,Y","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from 'react';\r\nimport { ContactForm } from '../../components/contactForm/ContactForm';\r\nimport { TileList } from '../../components/tileList/TileList';\r\n\r\nexport const ContactsPage = (props) => {\r\n  // Define state variables for contact info and duplicate check\r\n  const contact = props.contact;\r\n  const addContact = props.addContact;\r\n\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Add contact info and clear data if the contact name is not a duplicate\r\n    if (!duplicate) {\r\n\r\n      addContact(name,phone, email);\r\n      // reseting values\r\n      setName('');\r\n      setPhone('');\r\n      setEmail('');\r\n    }\r\n  };\r\n\r\n\r\n  // check for contact name in the contacts array variable in props\r\n  useEffect( () => {\r\n    for (const person of contact) {\r\n      if (name === person.name) {\r\n        setDuplicate(true);\r\n      }\r\n\r\n      return;\r\n    }\r\n  },[name]);\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2>\r\n        <ContactForm \r\n          name={name}\r\n          phone={phone}\r\n          email={email}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}